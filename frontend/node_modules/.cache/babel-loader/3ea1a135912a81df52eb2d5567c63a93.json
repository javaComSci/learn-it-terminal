{"ast":null,"code":"var _jsxFileName = \"/Users/indhu/Documents/learn-it/frontend/src/ViewWordsDialog.js\";\nimport React, { Component } from 'react';\nimport { Button } from '@material-ui/core';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nexport default class ViewWordsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOpen = () => {\n      console.log(\"OPENED\");\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      open: false,\n      body: \"\"\n    };\n  }\n\n  render() {\n    const classes = useStyles();\n    const [modalStyle] = React.useState(getModalStyle);\n    console.log(\"STATE IS \" + this.state.open);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.handleOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \" View Words \"), /*#__PURE__*/React.createElement(Modal, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: modalStyle,\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      id: \"simple-modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"Text in a modal\"), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"simple-modal-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\"), /*#__PURE__*/React.createElement(SimpleModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/indhu/Documents/learn-it/frontend/src/ViewWordsDialog.js"],"names":["React","Component","Button","Modal","makeStyles","getModalStyle","top","rand","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","ViewWordsDialog","constructor","props","handleOpen","console","log","setState","open","handleClose","state","body","render","classes","modalStyle","useState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from '@material-ui/core';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n  \n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n  }\n  \nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      position: 'absolute',\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }));\n\nexport default class ViewWordsDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            body: \"\"\n        };\n    }\n\n    handleOpen = () => {\n        console.log(\"OPENED\");\n        this.setState({\n            open: true\n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            open: false\n        })\n    }\n\n    render() {\n        const classes = useStyles();\n        const [modalStyle] = React.useState(getModalStyle);\n\n        console.log(\"STATE IS \" + this.state.open)\n        return <div>\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleOpen}> View Words </Button>\n            <Modal\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"> \n                <div>\n                    <div style={modalStyle} className={classes.paper}>\n                    <h2 id=\"simple-modal-title\">Text in a modal</h2>\n                    <p id=\"simple-modal-description\">\n                        Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n                    </p>\n                    <SimpleModal />\n                    </div>\n                </div>\n            </Modal>\n        </div>\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}